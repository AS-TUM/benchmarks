diff --git a/Makefile b/Makefile
index 27d4fcb..0d10af0 100755
--- a/Makefile
+++ b/Makefile
@@ -12,17 +12,17 @@ all: dependencies
 	make -C tools/hooks
 	make -C splash2
 	make -C parsec
-	make -C cpu2006
 	make -C npb
 	make -C local
+	-make -C cpu2006
 
 clean:
 	make -C tools/hooks clean
 	make -C splash2 clean
 	make -C parsec clean
-	make -C cpu2006 clean
 	make -C npb clean
 	make -C local clean
+	-make -C cpu2006 clean
 
 dependencies:
 	$(BENCHMARKS_ROOT)/tools/scripts/checkdependencies.py
diff --git a/parsec/Makefile b/parsec/Makefile
index 75100fc..a678afc 100755
--- a/parsec/Makefile
+++ b/parsec/Makefile
@@ -3,12 +3,12 @@ HOOKS_DIR=../tools/hooks/
 
 parsec-core : parsec-2.1/.parsec_source
 parsec-2.1/.parsec_source :
-	wget -O - http://parsec.cs.princeton.edu/download/2.1/parsec-2.1-core.tar.gz | tar xz --keep-old-files ; true
-	wget -O - -q http://parsec.cs.princeton.edu/download/2.1/bugfixes/parsec-ocreat.patch | patch -p1 -dparsec-2.1
-	wget -O - -q http://parsec.cs.princeton.edu/download/2.1/bugfixes/ferret-deadlock.patch | patch -p1 -dparsec-2.1
-	wget -O - -q http://parsec.cs.princeton.edu/download/2.1/bugfixes/blackscholes.c.patch | patch -p0 -dparsec-2.1/pkgs/apps/blackscholes/src
-	wget -O - -q http://parsec.cs.princeton.edu/download/2.1/bugfixes/blackscholes.tbb.cpp.patch | patch -p0 -dparsec-2.1/pkgs/apps/blackscholes/src
-	wget -O - -q http://parsec.cs.princeton.edu/download/2.1/bugfixes/streamcluster_barrier.patch | patch -p1 -dparsec-2.1
+	wget --no-check-certificate -O - http://parsec.cs.princeton.edu/download/2.1/parsec-2.1-core.tar.gz | tar xz --keep-old-files ; true
+	wget --no-check-certificate -O - -q http://parsec.cs.princeton.edu/download/2.1/bugfixes/parsec-ocreat.patch | patch -p1 -dparsec-2.1
+	wget --no-check-certificate -O - -q http://parsec.cs.princeton.edu/download/2.1/bugfixes/ferret-deadlock.patch | patch -p1 -dparsec-2.1
+	wget --no-check-certificate -O - -q http://parsec.cs.princeton.edu/download/2.1/bugfixes/blackscholes.c.patch | patch -p0 -dparsec-2.1/pkgs/apps/blackscholes/src
+	wget --no-check-certificate -O - -q http://parsec.cs.princeton.edu/download/2.1/bugfixes/blackscholes.tbb.cpp.patch | patch -p0 -dparsec-2.1/pkgs/apps/blackscholes/src
+	wget --no-check-certificate -O - -q http://parsec.cs.princeton.edu/download/2.1/bugfixes/streamcluster_barrier.patch | patch -p1 -dparsec-2.1
 	patch -p1 -dparsec-2.1 < patches/ssl-asm.patch
 	patch -p1 -dparsec-2.1 < patches/raytrace-unistd-gcc-fix.patch
 	patch -p3 -dparsec-2.1 < patches/raytrace-Xext-fix.patch
@@ -17,11 +17,11 @@ parsec-2.1/.parsec_source :
 
 parsec-input-sim : parsec-2.1/pkgs/apps/blackscholes/inputs/input_simsmall.tar
 parsec-2.1/pkgs/apps/blackscholes/inputs/input_simsmall.tar :
-	wget -O - http://parsec.cs.princeton.edu/download/2.1/parsec-2.1-sim.tar.gz | tar xz
+	wget --no-check-certificate -O - http://parsec.cs.princeton.edu/download/2.1/parsec-2.1-sim.tar.gz | tar xz
 
 parsec-input-native : parsec-2.1/pkgs/apps/blackscholes/inputs/input_native.tar
 parsec-2.1/pkgs/apps/blackscholes/inputs/input_native.tar :
-	wget -O - http://parsec.cs.princeton.edu/download/2.1/parsec-2.1-native.tar.gz | tar xz
+	wget --no-check-certificate -O - http://parsec.cs.princeton.edu/download/2.1/parsec-2.1-native.tar.gz | tar xz
 
 parsec-dependencies :
 	./checkdependencies.py
diff --git a/run-sniper b/run-sniper
index 46825c0..8d73751 100755
--- a/run-sniper
+++ b/run-sniper
@@ -135,10 +135,6 @@ if not os.path.exists(os.path.realpath(os.path.join(graphiterootdir, 'run-sniper
   print '\nERROR: The SNIPER_ROOT or GRAPHITE_ROOT environment variable has been set to the wrong directory. Please set it to a directory containing Sniper to continue.\n'
   sys.exit(1)
 
-if not os.path.exists(os.path.realpath(os.path.join(graphiterootdir, 'lib', 'pin_sim.so'))):
-  print '\nERROR: Sniper has not been compiled. Please compile Sniper before trying to run an application.\n'
-  sys.exit(1)
-
 # This command will always succeed
 benchmarksrootdir = env_setup_bm.benchmarks_root()
 os.putenv('BENCHMARKS_ROOT', benchmarksrootdir)
@@ -151,7 +147,14 @@ if not os.path.exists(os.path.realpath(os.path.join(graphiterootdir, 'run-sniper
   print '\nERROR: The SNIPER_ROOT or GRAPHITE_ROOT environment variable has been set to the wrong directory. Please set it to a directory containing Sniper to continue.\n'
   sys.exit(1)
 
-if not os.path.exists(os.path.realpath(os.path.join(graphiterootdir, 'lib', 'pin_sim.so'))):
+# Has Sniper been compiled
+bins = ['pin_sim.so', 'sniper']
+found = False
+for b in bins:
+  if os.path.exists(os.path.realpath(os.path.join(graphiterootdir, 'lib', b))):
+    print 'found', b
+    found = True
+if not found:
   print '\nERROR: Sniper has not been compiled. Please compile Sniper before trying to run an application.\n'
   sys.exit(1)
 
diff --git a/tools/docker/Dockerfile b/tools/docker/Dockerfile
new file mode 100644
index 0000000..cc15fd9
--- /dev/null
+++ b/tools/docker/Dockerfile
@@ -0,0 +1,91 @@
+FROM centos:6
+# Fix main repos, from https://stackoverflow.com/a/29559374
+RUN sed -i '/^mirrorlist/s/^/#/;/^#baseurl/{s/#//;s/mirror.centos.org\/centos\/$releasever/vault.centos.org\/6.10/}' /etc/yum.repos.d/*B*
+# Install wget and install a new repository for the devtoolset-2 (gcc-4.8)
+# Install repos for devtoolset-2
+RUN yum update -y && \
+    yum install -y \
+      centos-release-scl \
+      wget \ 
+    && \
+    wget --no-check-certificate http://people.centos.org/tru/devtools-2/devtools-2.repo -O /etc/yum.repos.d/devtools-2.repo && \
+    yum clean all && \
+    rm -rf /tmp/* /var/tmp/*
+# Fix SCL repos, from https://stackoverflow.com/a/29559374
+RUN sed -i '/^mirrorlist/s/^/#/;/^#baseurl/{s/#//;s/mirror.centos.org\/centos\/6/vault.centos.org\/6.10/}' /etc/yum.repos.d/*SCL*
+RUN sed -i '/^mirrorlist/s/^/#/;/^# baseurl/{s/# //;s/mirror.centos.org\/centos\/6/vault.centos.org\/6.10/}' /etc/yum.repos.d/*SCL* 
+# Install dependencies for LLVM, Sniper and Benchmarks, matplotlib, gcc-4.8 / devtoolset-2, gcc-7 / devtoolset-7
+RUN yum update -y && \
+    yum install -y \
+      autoconf \
+      automake \
+      bison-devel \
+      bison \
+      boost-devel \
+      bzip2-devel \
+      cmake \
+      curl-devel \
+      devtoolset-2-gcc \
+      devtoolset-2-gcc-gfortran \
+      devtoolset-2-binutils \
+      devtoolset-2-gcc-c++ \
+      devtoolset-7-toolchain \
+      devtoolset-7-gcc-gfortran \
+      flex-devel \
+      flex \
+      freetype-devel \
+      gcc-c++ \
+      gettext \
+      git \
+      glibc-static \
+      glibc.i686 \
+      libpng-devel \
+      libtool \
+      libxslt \
+      libX11-devel \
+      libXext-devel \
+      libXi-devel \
+      libXmu-devel \
+      libXt-devel \
+      m4 \
+      openssh-clients \
+      openssl-devel \
+      patch \
+      perl-ExtUtils-MakeMaker \
+      python-devel \
+      redhat-lsb \
+      scons \
+      sqlite-devel \
+      tar \
+      which \
+      zlib-devel \
+      && \
+    yum clean all && \
+    rm -rf /tmp/* /var/tmp/*
+# Install Python 2.7
+RUN cd /tmp && \
+    wget -O - https://www.python.org/ftp/python/2.7.10/Python-2.7.10.tgz | tar -x -f - -z && \
+    cd Python-2.7.10 && \
+    ./configure --prefix=/usr/local && \
+    make install && \
+    cd / && \
+    rm -rf /tmp/* /var/tmp/*
+# Install Git 2.5.0
+RUN cd /tmp && \
+    wget --no-check-certificate -O - https://www.kernel.org/pub/software/scm/git/git-2.5.0.tar.gz | tar -x -f - -z && \
+    cd git-2.5.0 && \
+    ./configure --prefix=/usr/local && \
+    make all install && \
+    cd / && \
+    rm -rf /tmp/* /var/tmp/*
+# Add Python and Git to the path
+ENV PATH /usr/local/bin/:$PATH
+# Setup the user in your environment
+ARG USER
+ARG UID
+ARG GID
+RUN useradd --create-home -s /bin/bash --uid $UID --gid $GID $USER
+# Enable gcc-4.8 as the default
+ENV PATH /opt/rh/devtoolset-2/root/usr/bin/:$PATH
+# Enable gcc-7 as the default
+#ENV PATH /opt/rh/devtoolset-7/root/usr/bin/:$PATH
diff --git a/tools/docker/Makefile b/tools/docker/Makefile
new file mode 100644
index 0000000..04ab809
--- /dev/null
+++ b/tools/docker/Makefile
@@ -0,0 +1,9 @@
+DOCKER_IMAGE=centos:6-gcc-7-benchmarks-$(USER)
+
+run: build
+	docker run --rm -it -e HOME="${HOME}" -v "${HOME}:${HOME}" --user $(shell id -u):$(shell id -g) -w "${PWD}" $(DOCKER_IMAGE)
+
+build: Dockerfile
+	docker build --build-arg UID=$(shell id -u) --build-arg GID=$(shell id -g) --build-arg USER="${USER}" -t $(DOCKER_IMAGE) .
+
+.PHONY: run build
diff --git a/tools/hooks/makebuildscripts.py b/tools/hooks/makebuildscripts.py
index 9dd516f..1c72a08 100755
--- a/tools/hooks/makebuildscripts.py
+++ b/tools/hooks/makebuildscripts.py
@@ -7,7 +7,7 @@ flags = [
   ('HOOKS_DIR', '${BENCHMARKS_ROOT}/tools/hooks'),
   ('HOOKS_CC', 'gcc'),
   ('HOOKS_CXX', 'g++'),
-  ('HOOKS_FC', 'f95'),
+  ('HOOKS_FC', 'gfortran'),
   ('LD', 'g++'),
   ('HOOKS_CFLAGS', '-I${HOOKS_DIR} -I${GRAPHITE_ROOT}/include'),
   ('HOOKS_CXXFLAGS', '${HOOKS_CFLAGS}'),
diff --git a/tools/scripts/checkdependencies.py b/tools/scripts/checkdependencies.py
index 78e2ca2..8344ca3 100755
--- a/tools/scripts/checkdependencies.py
+++ b/tools/scripts/checkdependencies.py
@@ -6,7 +6,7 @@ import sys, os
 
 DEPENDENCIES = [
   ('g++ / gcc-g++', '/usr/bin/g++'),
-  ('gfortran', '/usr/bin/f95'),
+  ('gfortran', '/usr/bin/gfortran'),
   ('m4', '/usr/bin/m4'),
   ('wget', '/usr/bin/wget'),
 ]
@@ -14,6 +14,7 @@ DEPENDENCIES = [
 ALTERNATIVES = [
   ('/usr/lib', '/usr/lib/x86_64-linux-gnu'),
   ('/usr/lib', '/usr/lib64'),
+  ('/usr/bin', '/opt/rh/devtoolset-2/root/usr/bin'),
 ]
 
 missing = []
